import streamlit as st


st.set_page_config(
    page_title="Assistant vendeur",
    page_icon="üë©‚Äçüíª",
)

st.subheader("Analyse du set de donn√©es d'entrainement")

st.markdown(
    """
    Dans le cadre de notre projet, **Jimmy**, **Haroune** et **Alexandre** ont explor√© plusieurs mod√®les de classification afin d‚Äô√©valuer la meilleure approche pour notre jeu de donn√©es.

    L‚Äôobjectif de ce benchmark est de comparer :
    - La **pr√©cision** des mod√®les
    - Le **temps d'entra√Ænement**
    - La **capacit√© √† g√©n√©raliser** (via validation crois√©e)
    - Et leur **facilit√© d‚Äôint√©gration** dans notre application Streamlit

    üëá Retrouvez ci-dessous un aper√ßu de leurs travaux. Les d√©tails techniques et r√©sultats seront compl√©t√©s au fur et √† mesure de l‚Äôanalyse.
    """
    )

st.markdown("""
    <style>
    div[data-baseweb="tab-list"] {
        justify-content: center;
        gap: 10rem;
    }
    </style>
""", unsafe_allow_html=True)

tab1, tab2, tab3 = st.tabs(['Alexandre', 'Haroune', 'Jimmy'])

with tab1:
    st.markdown(
    """
    Alexandre a travaill√© sur la technologie OCR Tesseract.
Il a test√© l'ensemble des m√©thodes de filtrage d‚Äôimage afin d‚Äô√©valuer celles offrant les meilleurs r√©sultats avec Tesseract. Le filtre ayant donn√© les performances les plus satisfaisantes est le filtre de r√©duction de bruit (Denoised).

Lorsqu‚Äôun texte peut √™tre extrait de l‚Äôimage, celui-ci est ensuite analys√© par un algorithme combinant un dictionnaire de r√©f√©rence, des expressions r√©guli√®res, ainsi que plusieurs m√©thodes de similarit√© textuelle : Levenshtein, Jaro-Winkler, Char N-gram et FuzzyWuzzy.

√Ä ce stade, la pr√©cision du syst√®me est tr√®s bonne, mais le rappel reste encore faible, ce qui signifie que nous ratons une partie des textes pertinents.

Les donn√©es extraites sont ensuite exploit√©es par plusieurs mod√®les de classification :

    R√©gression logistique ‚Äî F1: 0.4362 | Accuracy: 0.5070 | Recall: 0.5070

    SVM ‚Äî F1: 0.3498 | Accuracy: 0.4507 | Recall: 0.4507

    Random Forest ‚Äî F1: 0.4536 | Accuracy: 0.5211 | Recall: 0.5211

    Gradient Boosting ‚Äî F1: 0.4354 | Accuracy: 0.5070 | Recall: 0.5070

Par ailleurs, Alexandre a √©galement d√©velopp√© un mod√®le de reconnaissance de logos permettant d‚Äôidentifier les diff√©rentes plateformes (PlayStation, Xbox, etc.), avec une accuracy de 0.54.
    """
    )

with tab2:
    st.markdown(
    """
    Haroune a travaill√© sur RapidOCR.
Les r√©sultats obtenus avec cet outil donnent une pr√©cision de 47‚ÄØ% pour la cat√©gorie et 48‚ÄØ% pour la sous-cat√©gorie.

Ces performances relativement faibles s'expliquent en partie par le d√©s√©quilibre de la base de donn√©es, que vous pouvez visualiser via le treemap disponible dans la page "Analyse".
Par ailleurs, certaines images ne comportent ni logo identifiable, ni √©l√©ments textuels explicites permettant de faire le lien avec une cat√©gorie comme PC Gaming.

Haroune s‚Äôest ensuite orient√© vers l‚Äôexp√©rimentation de mod√®les VLLM (Vision Language Large Models) tels que : Claude, OpenAI, Gemini, Mistral et DeepSeek.
    """
    )

with tab3:
    st.markdown(
    """
Jimmy a travaill√© dans un premier temps avec DoctR, mais les r√©sultats obtenus se sont r√©v√©l√©s peu concluants : l'information textuelle n'√©tait pas correctement extraite des images.

Il s‚Äôest ensuite orient√© vers un r√©seau de neurones simple, dont la matrice de confusion a montr√© de bons r√©sultats pour la classe PC Gaming, mais des performances plus faibles sur les autres cat√©gories.
    """)
    img_path = "logos/cnn.png"
    st.image(img_path, caption="Matrice de confusion CNN", width=400)

    st.markdown(
        """
Par la suite, il a test√© un mod√®le pr√©-entra√Æn√©, MobileNet V2, avec les r√©sultats suivants :
Accuracy : 0.4623
Pr√©cision : 0.3107
    """)
    img_path = "logos/mobilenetv2.png"
    st.image(img_path, caption="Matrice de confusion MobileNet v2", width=400)

    st.markdown(
    """
Il a ensuite affin√© ce mod√®le gr√¢ce √† du fine-tuning, ce qui a permis d'am√©liorer les performances :
Accuracy : 0.5000
Pr√©cision : 0.5858

    """)
    img_path = "logos/MNV2_ft.png"
    st.image(img_path, caption="Matrice de confusion MobileNet v2 fine tune", width=400)

        st.markdown(
        """
Jimmy a entra√Æn√© un grad cam afon d'observer les zones reconnu par le mod√®le et nous pouvons constater que les zones ne sont pas les zones informatives qui nous int√©resse.
    """)
    col1,col2 = st.columns(2)
    with col1:
        img_path = "logos/grad_cam1.png"
        st.image(img_path, caption="Grad cam sur une cartouche GameBoy", width=400)

    with col2:
        img_path = "logos/grad_cam2.png"
        st.image(img_path, caption="Grad cam sur le jeu Sims", width=400)
