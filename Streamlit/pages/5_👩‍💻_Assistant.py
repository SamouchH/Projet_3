import streamlit as st
import numpy as np
from PIL import Image
from utils import generate_mistral_response, load_model, predict, category_labels


st.set_page_config(
    page_title="Assistant vendeur",
    page_icon="üë©‚Äçüíª",
)

# Initialisation de la cl√© "final_desc" dans session_state si elle n'existe pas
if "final_desc" not in st.session_state:
    st.session_state["final_desc"] = ""

st.markdown(
    """
## üéØ **Comment utiliser cette application ?**
- **1Ô∏è‚É£ T√©l√©chargez vos images** : elles seront analys√©es pour identifier le produit.
- **2Ô∏è‚É£ V√©rifiez les informations extraites** : ajustez si n√©cessaire.
- **3Ô∏è‚É£ G√©n√©rez automatiquement une description** et affinez-la √† votre convenance.
- **4Ô∏è‚É£ Exportez votre annonce** pr√™te √† √™tre publi√©e !
"""
)

st.write("L'assistant utilisera l'image uploader dans la page Preprocessing, sinon uploader une nouvelle image:")
uploaded_file = st.file_uploader("üì§ Uploadez une image au format JPG", type=["jpg"])

if uploaded_file is not None:
    #Charger l'image
    image = Image.open(uploaded_file).convert('RGB')
    st.session_state["image_raw"] = np.array(image)
    st.success("‚úÖ Nouvelle image charg√©e avec succ√®s !")

# Chargement du mod√®le
model = load_model()
if "image_raw" in st.session_state:
    st.image(st.session_state["image_raw"], caption="Image d'origine",  use_container_width=True)

    #Preprocessing d'image
    #st.markdown("Pr√©-traitement utilis√©: CLAHE & Sharpening")

    #Model
    if st.button('Lancer la cat√©gorisation'):
        pred_index = predict(model, st.session_state["image_raw"])
        pred_category = CATEGORY_LABELS[pred_index]
        st.session_state["pred_marque"] = pred_category
        st.success(f"‚úÖ Cat√©gorie pr√©dite : **{pred_category}**")

else:
    st.info("Aucune image disponible pour le moment.")

#Valeur d'essai
#pred_marque = st.session_state.get("pred_marque","Jeux Playstation")
# pred_platform = st.session_state.get("pred_platform","Playstation 4")


titre = st.text_input("Titre de l'annonce",value="")
platform = st.text_input("Platform", value=pred_marque)
etat = st.selectbox(
    "√âtat du produit",["Sous Blister", "Neuf", "Tr√®s bon √©tat", "Bon √©tat", "√âtat satisfaisant"])
description = st.text_area("Desciption du produit (facultatif)", value="")

if st.button("üí° G√©n√©rer une description avec l'assistant IA"):
    prompt = f"""
    Tu es un assistant de r√©daction d'annonce. Propose une description accrocheuse pour un jeu vid√©o d'occasion.
    
    - Titre : {titre}
    - Plateforme : {platform}
    - √âtat : {etat}
    
    R√©dige un texte fluide en fran√ßais, en peu de phrases, convaincant et clair. Le texte doit reprendre les informations fournit.
    """
    with st.spinner("L'IA r√©dige une description... ‚úçÔ∏è"):
        description = generate_mistral_response(prompt)
        st.session_state["final_desc"] = description
        st.success("‚úÖ Description g√©n√©r√©e !")

with st.form('formulaire_annonce'):
    st.text_area("Proposition d'annonce:", height=200, key="final_desc")
    submit = st.form_submit_button("Valider l'annonce")

if submit:
    st.success("Annonce enregistr√©e (simu)")
    st.write("**Titre:**", titre)
    st.write("**Platforme:**", platform)
    st.write("**√âtat:**", etat)
    st.write("**Description:**", st.session_state["final_desc"])

